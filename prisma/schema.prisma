generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-arm64-openssl-1.1.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Block {
  number           BigInt        @id @unique
  hash             String        @unique
  parentHash       String
  nonce            String?
  sha3Uncles       String
  logsBloom        String?
  transactionsRoot String
  stateRoot        String
  receiptsRoot     String
  miner            String
  difficulty       BigInt
  totalDifficulty  BigInt
  extraData        String?
  size             BigInt
  gasLimit         BigInt
  gasUsed          BigInt
  createdAt        BigInt
  transactions     Transaction[]

  @@map("block")
}

model Transaction {
  hash             String              @id @unique
  nonce            BigInt
  blockHash        String?
  blockNumber      BigInt
  transactionIndex Int?
  from             String
  to               String?
  input            String
  value            Decimal             @db.Decimal(78, 0)
  chainId          Int?
  gas              BigInt
  gasPrice         BigInt?
  block            Block               @relation(fields: [blockNumber], references: [number], onDelete: Cascade)
  receipt          TransactionReceipt?

  @@map("transaction")
}

model TransactionReceipt {
  transactionHash   String      @id @unique
  transactionIndex  Int
  blockHash         String
  blockNumber       BigInt
  from              String
  to                String?
  cumulativeGasUsed BigInt
  gasUsed           BigInt
  contractAddress   String?
  logsBloom         String
  status            Boolean
  effectiveGasPrice BigInt
  type              String
  root              String?
  createdAt         DateTime    @default(now())
  logs              Log[]
  transaction       Transaction @relation(fields: [transactionHash], references: [hash], onDelete: Cascade)

  @@map("transaction_receipt")
}

model Log {
  logHash            String             @id
  address            String
  data               String
  blockNumber        BigInt
  transactionHash    String
  transactionIndex   Int
  index              Int
  removed            Boolean
  transactionReceipt TransactionReceipt @relation(fields: [transactionHash], references: [transactionHash], onDelete: Cascade)
  topics             LogTopic[]

  @@map("log")
}

model LogTopic {
  topicHash String @id
  topic     String
  index     Int
  logHash   String
  log       Log    @relation(fields: [logHash], references: [logHash], onDelete: Cascade)

  @@map("log_topic")
}
